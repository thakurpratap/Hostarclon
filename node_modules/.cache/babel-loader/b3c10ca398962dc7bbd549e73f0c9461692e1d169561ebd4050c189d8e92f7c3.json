{"ast":null,"code":"var _jsxFileName = \"/Users/pratapsingh/Library/Mobile Documents/com~apple~CloudDocs/Hotstar/Hostarclon/src/component/viewVideo.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Modal from '@mui/material/Modal';\nimport YouTube from 'react-youtube';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 660,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 1\n};\nfunction Viewvideo({\n  detailsId,\n  welcomeId,\n  TvId\n}) {\n  _s();\n  var _savevideos$;\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const [savevideos, setSavevideos] = useState([]);\n  const getvideos = async () => {\n    try {\n      var _ref;\n      const response = await fetch(`https://api.themoviedb.org/3/movie/${(_ref = detailsId !== null && detailsId !== void 0 ? detailsId : welcomeId) !== null && _ref !== void 0 ? _ref : TvId}/videos?api_key=b16e3ccef134709edd7ba814d4e2fd75&&language=en-US`);\n      const data = await response.json();\n      setSavevideos(data.results);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    // if (detailsId) {\n    getvideos();\n    // }\n  }, [detailsId]);\n  //   console.log(savevideos[0]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleOpen,\n        className: \"bg-gray-500 mt-10 w-60 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded\",\n        children: \"Watch Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        open: open,\n        onClose: handleClose,\n        \"aria-labelledby\": \"modal-modal-title\",\n        \"aria-describedby\": \"modal-modal-description\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: style,\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleClose,\n            sx: {\n              position: \"absolute\",\n              top: 8,\n              right: 8,\n              color: \"#fff\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(YouTube, {\n            videoId: savevideos && ((_savevideos$ = savevideos[0]) === null || _savevideos$ === void 0 ? void 0 : _savevideos$.key)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n_s(Viewvideo, \"1BQo1P2vfAp6Ydv7yHafZG4ZOLQ=\");\n_c = Viewvideo;\nexport default Viewvideo;\n{/* <YouTube videoId = {savevideos && savevideos[0]?.key} /> */}\n\n// import React, { useEffect, useState } from \"react\";\n// import Box from '@mui/material/Box';\n// import Button from '@mui/material/Button';\n// import Modal from '@mui/material/Modal';\n// import YouTube from 'react-youtube';\n\n// const style = {\n//     position: 'absolute',\n//     top: '50%',\n//     left: '50%',\n//     transform: 'translate(-50%, -50%)',\n//     width: 660,\n//     bgcolor: 'background.paper',\n//     border: '2px solid #000',\n//     boxShadow: 24,\n//     p: 1,\n//   };\n\n// function Viewvideo({detailsId}){\n\n//     const [open, setOpen] = useState(false);\n//     const handleOpen = () => setOpen(true);\n//     const handleClose = () => setOpen(false);\n//     const [savevideos , setSavevideos] = useState([])\n\n//     const getvideos = async ()=> {\n//         try{\n//             const response =  await fetch(`https://api.themoviedb.org/3/movie/${detailsId}/videos?api_key=b16e3ccef134709edd7ba814d4e2fd75&&language=en-US`)\n//             const data = await response.json();\n//             setSavevideos(data.results);\n//         }catch(error){\n//             console.error(error);\n//         }\n//     }\n//     useEffect(() => {\n//         // if (detailsId) {\n//           getvideos();\n//         // }\n//       }, [detailsId]);\n//     //   console.log(savevideos[0]);\n\n//     return(\n//         <>\n//   <div>\n//       {/* <Button onClick={handleOpen}>Open modal</Button> */}\n//       <Button onClick={handleOpen} className=\"bg-gray-500 mt-10 w-60 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded\">\n//             Watch Now\n//           </Button>\n//       <Modal\n//         open={open}\n//         onClose={handleClose}\n//         aria-labelledby=\"modal-modal-title\"\n//         aria-describedby=\"modal-modal-description\"\n//       >\n//         <Box sx={style}>\n//         <YouTube videoId = {savevideos && savevideos[0]?.key} /> \n//         </Box>\n//       </Modal>\n//     </div>\n//         </>\n//     )\n// }\n// export default Viewvideo;\n\n//         {/* <YouTube videoId = {savevideos && savevideos[0]?.key} /> */}\nvar _c;\n$RefreshReg$(_c, \"Viewvideo\");","map":{"version":3,"names":["React","useEffect","useState","Box","Button","Modal","YouTube","IconButton","CloseIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","Viewvideo","detailsId","welcomeId","TvId","_s","_savevideos$","open","setOpen","handleOpen","handleClose","savevideos","setSavevideos","getvideos","_ref","response","fetch","data","json","results","error","console","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","onClose","sx","right","color","videoId","key","_c","$RefreshReg$"],"sources":["/Users/pratapsingh/Library/Mobile Documents/com~apple~CloudDocs/Hotstar/Hostarclon/src/component/viewVideo.js"],"sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Modal from '@mui/material/Modal';\nimport YouTube from 'react-youtube';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 660,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 1,\n  };\n\nfunction Viewvideo({detailsId,welcomeId,TvId}){\n\n    const [open, setOpen] = useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    const [savevideos , setSavevideos] = useState([])\n\n    const getvideos = async ()=> {\n        try{\n            const response =  await fetch(`https://api.themoviedb.org/3/movie/${detailsId ?? welcomeId ?? TvId}/videos?api_key=b16e3ccef134709edd7ba814d4e2fd75&&language=en-US`)\n            const data = await response.json();\n            setSavevideos(data.results);\n        }catch(error){\n            console.error(error);\n        }\n    }\n    useEffect(() => {\n        // if (detailsId) {\n          getvideos();\n        // }\n      }, [detailsId]);\n    //   console.log(savevideos[0]);\n\n    return(\n        <>\n  <div>\n      {/* <Button onClick={handleOpen}>Open modal</Button> */}\n      <button onClick={handleOpen} className=\"bg-gray-500 mt-10 w-60 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded\">\n            Watch Now\n          </button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n        <IconButton\n            onClick={handleClose}\n            sx={{ position: \"absolute\", top: 8, right: 8, color: \"#fff\" }}\n          >\n            <CloseIcon />\n          </IconButton>\n        {/* <video width=\"320\" height=\"240\" controls>\n            <source src={videoUrl} type=\"video/mp4\" />\n            <source src={videoUrl.replace('.mp4', '.ogg')} type=\"video/ogg\" />\n            Your browser does not support the video tag.\n          </video> */}\n        <YouTube videoId = {savevideos && savevideos[0]?.key} /> \n        </Box>\n      </Modal>\n    </div>\n        </>\n    )\n}\nexport default Viewvideo;\n\n\n        {/* <YouTube videoId = {savevideos && savevideos[0]?.key} /> */}\n\n\n// import React, { useEffect, useState } from \"react\";\n// import Box from '@mui/material/Box';\n// import Button from '@mui/material/Button';\n// import Modal from '@mui/material/Modal';\n// import YouTube from 'react-youtube';\n\n// const style = {\n//     position: 'absolute',\n//     top: '50%',\n//     left: '50%',\n//     transform: 'translate(-50%, -50%)',\n//     width: 660,\n//     bgcolor: 'background.paper',\n//     border: '2px solid #000',\n//     boxShadow: 24,\n//     p: 1,\n//   };\n\n// function Viewvideo({detailsId}){\n\n//     const [open, setOpen] = useState(false);\n//     const handleOpen = () => setOpen(true);\n//     const handleClose = () => setOpen(false);\n//     const [savevideos , setSavevideos] = useState([])\n\n//     const getvideos = async ()=> {\n//         try{\n//             const response =  await fetch(`https://api.themoviedb.org/3/movie/${detailsId}/videos?api_key=b16e3ccef134709edd7ba814d4e2fd75&&language=en-US`)\n//             const data = await response.json();\n//             setSavevideos(data.results);\n//         }catch(error){\n//             console.error(error);\n//         }\n//     }\n//     useEffect(() => {\n//         // if (detailsId) {\n//           getvideos();\n//         // }\n//       }, [detailsId]);\n//     //   console.log(savevideos[0]);\n\n//     return(\n//         <>\n//   <div>\n//       {/* <Button onClick={handleOpen}>Open modal</Button> */}\n//       <Button onClick={handleOpen} className=\"bg-gray-500 mt-10 w-60 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded\">\n//             Watch Now\n//           </Button>\n//       <Modal\n//         open={open}\n//         onClose={handleClose}\n//         aria-labelledby=\"modal-modal-title\"\n//         aria-describedby=\"modal-modal-description\"\n//       >\n//         <Box sx={style}>\n//         <YouTube videoId = {savevideos && savevideos[0]?.key} /> \n//         </Box>\n//       </Modal>\n//     </div>\n//         </>\n//     )\n// }\n// export default Viewvideo;\n\n\n//         {/* <YouTube videoId = {savevideos && savevideos[0]?.key} /> */}\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,SAAS,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,MAAMC,KAAK,GAAG;EACVC,QAAQ,EAAE,UAAU;EACpBC,GAAG,EAAE,KAAK;EACVC,IAAI,EAAE,KAAK;EACXC,SAAS,EAAE,uBAAuB;EAClCC,KAAK,EAAE,GAAG;EACVC,OAAO,EAAE,kBAAkB;EAC3BC,MAAM,EAAE,gBAAgB;EACxBC,SAAS,EAAE,EAAE;EACbC,CAAC,EAAE;AACL,CAAC;AAEH,SAASC,SAASA,CAAC;EAACC,SAAS;EAACC,SAAS;EAACC;AAAI,CAAC,EAAC;EAAAC,EAAA;EAAA,IAAAC,YAAA;EAE1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM6B,UAAU,GAAGA,CAAA,KAAMD,OAAO,CAAC,IAAI,CAAC;EACtC,MAAME,WAAW,GAAGA,CAAA,KAAMF,OAAO,CAAC,KAAK,CAAC;EACxC,MAAM,CAACG,UAAU,EAAGC,aAAa,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAEjD,MAAMiC,SAAS,GAAG,MAAAA,CAAA,KAAW;IACzB,IAAG;MAAA,IAAAC,IAAA;MACC,MAAMC,QAAQ,GAAI,MAAMC,KAAK,CAAC,uCAAAF,IAAA,GAAsCZ,SAAS,aAATA,SAAS,cAATA,SAAS,GAAIC,SAAS,cAAAW,IAAA,cAAAA,IAAA,GAAIV,IAAI,kEAAkE,CAAC;MACrK,MAAMa,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCN,aAAa,CAACK,IAAI,CAACE,OAAO,CAAC;IAC/B,CAAC,QAAMC,KAAK,EAAC;MACTC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ,CAAC;EACDzC,SAAS,CAAC,MAAM;IACZ;IACEkC,SAAS,CAAC,CAAC;IACb;EACF,CAAC,EAAE,CAACX,SAAS,CAAC,CAAC;EACjB;;EAEA,oBACId,OAAA,CAAAE,SAAA;IAAAgC,QAAA,eACNlC,OAAA;MAAAkC,QAAA,gBAEIlC,OAAA;QAAQmC,OAAO,EAAEd,UAAW;QAACe,SAAS,EAAC,iFAAiF;QAAAF,QAAA,EAAC;MAErH;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACbxC,OAAA,CAACL,KAAK;QACJwB,IAAI,EAAEA,IAAK;QACXsB,OAAO,EAAEnB,WAAY;QACrB,mBAAgB,mBAAmB;QACnC,oBAAiB,yBAAyB;QAAAY,QAAA,eAE1ClC,OAAA,CAACP,GAAG;UAACiD,EAAE,EAAEvC,KAAM;UAAA+B,QAAA,gBACflC,OAAA,CAACH,UAAU;YACPsC,OAAO,EAAEb,WAAY;YACrBoB,EAAE,EAAE;cAAEtC,QAAQ,EAAE,UAAU;cAAEC,GAAG,EAAE,CAAC;cAAEsC,KAAK,EAAE,CAAC;cAAEC,KAAK,EAAE;YAAO,CAAE;YAAAV,QAAA,eAE9DlC,OAAA,CAACF,SAAS;cAAAuC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAMfxC,OAAA,CAACJ,OAAO;YAACiD,OAAO,EAAItB,UAAU,MAAAL,YAAA,GAAIK,UAAU,CAAC,CAAC,CAAC,cAAAL,YAAA,uBAAbA,YAAA,CAAe4B,GAAG;UAAC;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACA,CAAC;AAEX;AAACvB,EAAA,CAtDQJ,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AAuDlB,eAAeA,SAAS;AAGhB,CAAC;;AAGT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}