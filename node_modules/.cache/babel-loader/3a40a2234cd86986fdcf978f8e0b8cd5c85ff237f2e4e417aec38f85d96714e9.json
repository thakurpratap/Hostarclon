{"ast":null,"code":"function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nimport parsePhoneNumber from 'libphonenumber-js/core';\n\n/**\r\n * Formats a phone number.\r\n * Is a proxy for `libphonenumber-js`'s `.format()` function of a parsed `PhoneNumber`.\r\n * @param  {string} value\r\n * @param  {string} [format]\r\n * @param  {object} metadata\r\n * @return {string}\r\n */\nexport default function formatPhoneNumber(value, format, metadata) {\n  if (!metadata) {\n    if (_typeof(format) === 'object') {\n      metadata = format;\n      format = 'NATIONAL';\n    }\n  }\n  if (!value) {\n    return '';\n  }\n  var phoneNumber = parsePhoneNumber(value, metadata);\n  if (!phoneNumber) {\n    return '';\n  }\n  // Deprecated.\n  // Legacy `format`s.\n  switch (format) {\n    case 'National':\n      format = 'NATIONAL';\n      break;\n    case 'International':\n      format = 'INTERNATIONAL';\n      break;\n  }\n  return phoneNumber.format(format);\n}\nexport function formatPhoneNumberIntl(value, metadata) {\n  return formatPhoneNumber(value, 'INTERNATIONAL', metadata);\n}","map":{"version":3,"names":["parsePhoneNumber","formatPhoneNumber","value","format","metadata","_typeof","phoneNumber","formatPhoneNumberIntl"],"sources":["/Users/pratapsingh/Library/Mobile Documents/com~apple~CloudDocs/Hotstar/Hostarclon/node_modules/react-phone-number-input/source/libphonenumber/formatPhoneNumber.js"],"sourcesContent":["import parsePhoneNumber from 'libphonenumber-js/core'\r\n\r\n/**\r\n * Formats a phone number.\r\n * Is a proxy for `libphonenumber-js`'s `.format()` function of a parsed `PhoneNumber`.\r\n * @param  {string} value\r\n * @param  {string} [format]\r\n * @param  {object} metadata\r\n * @return {string}\r\n */\r\nexport default function formatPhoneNumber(value, format, metadata) {\r\n\tif (!metadata) {\r\n\t\tif (typeof format === 'object') {\r\n\t\t\tmetadata = format\r\n\t\t\tformat = 'NATIONAL'\r\n\t\t}\r\n\t}\r\n\tif (!value) {\r\n\t\treturn ''\r\n\t}\r\n\tconst phoneNumber = parsePhoneNumber(value, metadata)\r\n\tif (!phoneNumber) {\r\n\t\treturn ''\r\n\t}\r\n\t// Deprecated.\r\n\t// Legacy `format`s.\r\n\tswitch (format) {\r\n\t\tcase 'National':\r\n\t\t\tformat = 'NATIONAL'\r\n\t\t\tbreak\r\n\t\tcase 'International':\r\n\t\t\tformat = 'INTERNATIONAL'\r\n\t\t\tbreak\r\n\t}\r\n\treturn phoneNumber.format(format)\r\n}\r\n\r\nexport function formatPhoneNumberIntl(value, metadata) {\r\n\treturn formatPhoneNumber(value, 'INTERNATIONAL', metadata)\r\n}"],"mappings":";;;;;;;;;AAAA,OAAOA,gBAAgB,MAAM,wBAAwB;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,iBAAiBA,CAACC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,EAAE;EAClE,IAAI,CAACA,QAAQ,EAAE;IACd,IAAIC,OAAA,CAAOF,MAAM,MAAK,QAAQ,EAAE;MAC/BC,QAAQ,GAAGD,MAAM;MACjBA,MAAM,GAAG,UAAU;IACpB;EACD;EACA,IAAI,CAACD,KAAK,EAAE;IACX,OAAO,EAAE;EACV;EACA,IAAMI,WAAW,GAAGN,gBAAgB,CAACE,KAAK,EAAEE,QAAQ,CAAC;EACrD,IAAI,CAACE,WAAW,EAAE;IACjB,OAAO,EAAE;EACV;EACA;EACA;EACA,QAAQH,MAAM;IACb,KAAK,UAAU;MACdA,MAAM,GAAG,UAAU;MACnB;IACD,KAAK,eAAe;MACnBA,MAAM,GAAG,eAAe;MACxB;EACF;EACA,OAAOG,WAAW,CAACH,MAAM,CAACA,MAAM,CAAC;AAClC;AAEA,OAAO,SAASI,qBAAqBA,CAACL,KAAK,EAAEE,QAAQ,EAAE;EACtD,OAAOH,iBAAiB,CAACC,KAAK,EAAE,eAAe,EAAEE,QAAQ,CAAC;AAC3D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}