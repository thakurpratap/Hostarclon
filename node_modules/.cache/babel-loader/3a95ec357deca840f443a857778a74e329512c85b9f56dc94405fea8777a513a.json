{"ast":null,"code":"import { getCountryCallingCode } from 'libphonenumber-js/core';\nexport function getPrefixForFormattingValueAsPhoneNumber(_ref) {\n  var inputFormat = _ref.inputFormat,\n    country = _ref.country,\n    metadata = _ref.metadata;\n  return inputFormat === 'NATIONAL_PART_OF_INTERNATIONAL' ? \"+\".concat(getCountryCallingCode(country, metadata)) : '';\n}\nexport function removePrefixFromFormattedPhoneNumber(value, prefix) {\n  if (prefix) {\n    value = value.slice(prefix.length);\n    if (value[0] === ' ') {\n      value = value.slice(1);\n    }\n  }\n  return value;\n}","map":{"version":3,"names":["getCountryCallingCode","getPrefixForFormattingValueAsPhoneNumber","_ref","inputFormat","country","metadata","concat","removePrefixFromFormattedPhoneNumber","value","prefix","slice","length"],"sources":["/Users/pratapsingh/Library/Mobile Documents/com~apple~CloudDocs/Hotstar/Hostarclon/node_modules/react-phone-number-input/source/helpers/inputValuePrefix.js"],"sourcesContent":["import { getCountryCallingCode } from 'libphonenumber-js/core'\r\n\r\nexport function getPrefixForFormattingValueAsPhoneNumber({\r\n\tinputFormat,\r\n\tcountry,\r\n\tmetadata\r\n}) {\r\n\treturn inputFormat === 'NATIONAL_PART_OF_INTERNATIONAL' ?\r\n\t\t`+${getCountryCallingCode(country, metadata)}` :\r\n\t\t''\r\n}\r\n\r\nexport function removePrefixFromFormattedPhoneNumber(value, prefix) {\r\n\tif (prefix) {\r\n\t\tvalue = value.slice(prefix.length)\r\n\t\tif (value[0] === ' ') {\r\n\t\t\tvalue = value.slice(1)\r\n\t\t}\r\n\t}\r\n\treturn value\r\n}"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,wBAAwB;AAE9D,OAAO,SAASC,wCAAwCA,CAAAC,IAAA,EAIrD;EAAA,IAHFC,WAAW,GAAAD,IAAA,CAAXC,WAAW;IACXC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IACPC,QAAQ,GAAAH,IAAA,CAARG,QAAQ;EAER,OAAOF,WAAW,KAAK,gCAAgC,OAAAG,MAAA,CAClDN,qBAAqB,CAACI,OAAO,EAAEC,QAAQ,CAAC,IAC5C,EAAE;AACJ;AAEA,OAAO,SAASE,oCAAoCA,CAACC,KAAK,EAAEC,MAAM,EAAE;EACnE,IAAIA,MAAM,EAAE;IACXD,KAAK,GAAGA,KAAK,CAACE,KAAK,CAACD,MAAM,CAACE,MAAM,CAAC;IAClC,IAAIH,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MACrBA,KAAK,GAAGA,KAAK,CAACE,KAAK,CAAC,CAAC,CAAC;IACvB;EACD;EACA,OAAOF,KAAK;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}