{"ast":null,"code":"var _jsxFileName = \"/Users/pratapsingh/Library/Mobile Documents/com~apple~CloudDocs/Hotstar/Hostarclon/src/component/home.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Link, useOutletContext } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home({\n  inputText\n}) {\n  _s();\n  var _movies2;\n  let [movies] = useOutletContext(); // This should always give an array now\n\n  // const movies = props.movies;\n\n  if (inputText) {\n    var _movies;\n    // let filteitems = movies[0].title.includes(inputText)\n    movies = (_movies = movies) === null || _movies === void 0 ? void 0 : _movies.filter(data => {\n      var _data$title;\n      return data === null || data === void 0 ? void 0 : (_data$title = data.title) === null || _data$title === void 0 ? void 0 : _data$title.includes(inputText);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-6 bg-black\",\n    children: (_movies2 = movies) === null || _movies2 === void 0 ? void 0 : _movies2.map(data => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/moviedetails\",\n          state: {\n            data\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" rounded overflow-hidden shadow-lg mt-4 ml-4\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"w-full\",\n              src: `https://image.tmdb.org/t/p/w500${data.poster_path}`,\n              alt: \"Sunset in the mountains\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 9\n            }, this)\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n}\n_s(Home, \"b9tepqphEauBJQWBrCUt9AUUgBs=\", false, function () {\n  return [useOutletContext];\n});\n_c = Home;\nexport default Home;\n\n// import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n\n// function Home ({search,movies}){\n\n// const [searchkeys,setSearchKeys ]= useState(\"\")\n\n//     // Check if movies is defined and is an array\n//     // if (!movies || !Array.isArray(movies)) {\n//     //   return <div className=\"text-white\">No movies available.</div>;\n//     // }\n\n//    return (\n// <>\n// {search && \n// <input  onChange={(e)=> setSearchKeys(e.target.value)} type=\"text\"  className=\" ml-6 mt-6 h-16 bg-gray-800 border \n//          border-gray-800 text-white text-sm rounded-lg focus:ring-gray-800\n//           focus:border-gray-800 block w-11/12 p-2.5 outline-none\" placeholder=\"Movies, Shows and more\" required/>\n//           }\n// <div className=\"grid grid-cols-6 bg-black\">\n// {movies?.filter((data)=>data?.title?.includes(searchkeys) || data?.name?.includes(searchkeys)).map((data)=>{\n//     return  <>\n//     <Link to = \"/Moviedetails\" state={{data}}>\n//     <div key={data.id} className=\" rounded overflow-hidden shadow-lg mt-4 ml-4\">\n//   <img className=\"w-full\" src={`https://image.tmdb.org/t/p/w500${data.poster_path}`} alt=\"Sunset in the mountains\"/>\n// </div></Link>\n// </>\n//   })}\n// </div>\n// </>\n// )\n// }\n\n// export default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","Link","useOutletContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","inputText","_s","_movies2","movies","_movies","filter","data","_data$title","title","includes","className","children","map","to","state","src","poster_path","alt","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/pratapsingh/Library/Mobile Documents/com~apple~CloudDocs/Hotstar/Hostarclon/src/component/home.js"],"sourcesContent":["import React from \"react\";\nimport { Link, useOutletContext } from \"react-router-dom\";\n\nfunction Home ({inputText}){\n  let [movies] = useOutletContext();  // This should always give an array now\n\n  // const movies = props.movies;\n\n  if(inputText){\n    // let filteitems = movies[0].title.includes(inputText)\n     movies =  movies?.filter((data)=>data?.title?.includes(inputText))\n  }\n   return (\n    \n      <div className=\"grid grid-cols-6 bg-black\">\n      {movies?.map((data)=>{\n          return  <>\n          <Link to = \"/moviedetails\" state={{data}}>\n          <div key={data.id} className=\" rounded overflow-hidden shadow-lg mt-4 ml-4\">\n        <img className=\"w-full\" src={`https://image.tmdb.org/t/p/w500${data.poster_path}`} alt=\"Sunset in the mountains\"/>\n      </div></Link>\n    </>\n  })}\n</div>\n\n)\n}\n\nexport default Home;\n\n\n// import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n\n// function Home ({search,movies}){\n\n// const [searchkeys,setSearchKeys ]= useState(\"\")\n\n//     // Check if movies is defined and is an array\n//     // if (!movies || !Array.isArray(movies)) {\n//     //   return <div className=\"text-white\">No movies available.</div>;\n//     // }\n\n//    return (\n// <>\n// {search && \n// <input  onChange={(e)=> setSearchKeys(e.target.value)} type=\"text\"  className=\" ml-6 mt-6 h-16 bg-gray-800 border \n//          border-gray-800 text-white text-sm rounded-lg focus:ring-gray-800\n//           focus:border-gray-800 block w-11/12 p-2.5 outline-none\" placeholder=\"Movies, Shows and more\" required/>\n//           }\n// <div className=\"grid grid-cols-6 bg-black\">\n// {movies?.filter((data)=>data?.title?.includes(searchkeys) || data?.name?.includes(searchkeys)).map((data)=>{\n//     return  <>\n//     <Link to = \"/Moviedetails\" state={{data}}>\n//     <div key={data.id} className=\" rounded overflow-hidden shadow-lg mt-4 ml-4\">\n//   <img className=\"w-full\" src={`https://image.tmdb.org/t/p/w500${data.poster_path}`} alt=\"Sunset in the mountains\"/>\n// </div></Link>\n// </>\n//   })}\n// </div>\n// </>\n// )\n// }\n\n// export default Home;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,gBAAgB,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1D,SAASC,IAAIA,CAAE;EAACC;AAAS,CAAC,EAAC;EAAAC,EAAA;EAAA,IAAAC,QAAA;EACzB,IAAI,CAACC,MAAM,CAAC,GAAGT,gBAAgB,CAAC,CAAC,CAAC,CAAE;;EAEpC;;EAEA,IAAGM,SAAS,EAAC;IAAA,IAAAI,OAAA;IACX;IACCD,MAAM,IAAAC,OAAA,GAAID,MAAM,cAAAC,OAAA,uBAANA,OAAA,CAAQC,MAAM,CAAEC,IAAI;MAAA,IAAAC,WAAA;MAAA,OAAGD,IAAI,aAAJA,IAAI,wBAAAC,WAAA,GAAJD,IAAI,CAAEE,KAAK,cAAAD,WAAA,uBAAXA,WAAA,CAAaE,QAAQ,CAACT,SAAS,CAAC;IAAA,EAAC;EACrE;EACC,oBAEGJ,OAAA;IAAKc,SAAS,EAAC,2BAA2B;IAAAC,QAAA,GAAAT,QAAA,GACzCC,MAAM,cAAAD,QAAA,uBAANA,QAAA,CAAQU,GAAG,CAAEN,IAAI,IAAG;MACjB,oBAAQV,OAAA,CAAAE,SAAA;QAAAa,QAAA,eACRf,OAAA,CAACH,IAAI;UAACoB,EAAE,EAAG,eAAe;UAACC,KAAK,EAAE;YAACR;UAAI,CAAE;UAAAK,QAAA,eACzCf,OAAA;YAAmBc,SAAS,EAAC,8CAA8C;YAAAC,QAAA,eAC7Ef,OAAA;cAAKc,SAAS,EAAC,QAAQ;cAACK,GAAG,EAAE,kCAAkCT,IAAI,CAACU,WAAW,EAAG;cAACC,GAAG,EAAC;YAAyB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC,GADtGf,IAAI,CAACgB,EAAE;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEhB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC,gBACb,CAAC;IACL,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAGN;AAACpB,EAAA,CAvBQF,IAAI;EAAA,QACIL,gBAAgB;AAAA;AAAA6B,EAAA,GADxBxB,IAAI;AAyBb,eAAeA,IAAI;;AAGnB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}