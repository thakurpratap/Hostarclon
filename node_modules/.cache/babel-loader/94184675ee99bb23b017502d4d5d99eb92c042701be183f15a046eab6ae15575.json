{"ast":null,"code":"var _jsxFileName = \"/Users/pratapsingh/Library/Mobile Documents/com~apple~CloudDocs/Hotstar/Hostarclon/src/component/home.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useOutletContext } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [movies, searchTerm] = useOutletContext(); // This should always give an array now\n\n  const filteredMovies = searchTerm ? movies.filter(movie => movie.title && movie.title.toLowerCase().includes(searchTerm.toLowerCase())) : movies;\n  // Filter based on search term\n\n  console.log(filteredMovies, '>>filter search');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      className: \"block w-full p-4 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 \",\n      placeholder: \"movies, shows and more\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-6 bg-black\",\n      children: filteredMovies.map(data => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" rounded overflow-hidden shadow-lg mt-4 ml-4\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"w-full\",\n              src: `https://image.tmdb.org/t/p/w500${data.poster_path}`,\n              alt: \"Sunset in the mountains\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 3\n            }, this)\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 5\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(Home, \"Um+G1GyqujLOST0uRhi0C5f/1qA=\", false, function () {\n  return [useOutletContext];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useOutletContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","movies","searchTerm","filteredMovies","filter","movie","title","toLowerCase","includes","console","log","children","type","className","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","map","data","src","poster_path","alt","id","_c","$RefreshReg$"],"sources":["/Users/pratapsingh/Library/Mobile Documents/com~apple~CloudDocs/Hotstar/Hostarclon/src/component/home.js"],"sourcesContent":["import React from \"react\";\nimport { useOutletContext } from \"react-router-dom\";\n\nfunction Home (){\n  const [movies, searchTerm] = useOutletContext();  // This should always give an array now\n\n  const filteredMovies = searchTerm\n  ? movies.filter(\n      (movie) => movie.title && movie.title.toLowerCase().includes(searchTerm.toLowerCase())\n    )\n  : movies;\n  // Filter based on search term\n\n  console.log(filteredMovies,'>>filter search')\n   return (\n<>\n <input type=\"search\" className=\"block w-full p-4 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 \" placeholder=\"movies, shows and more\" required />\n<div className=\"grid grid-cols-6 bg-black\">\n{filteredMovies.map((data)=>{\n    return  <>\n    <div key={data.id} className=\" rounded overflow-hidden shadow-lg mt-4 ml-4\">\n  <img className=\"w-full\" src={`https://image.tmdb.org/t/p/w500${data.poster_path}`} alt=\"Sunset in the mountains\"/>\n</div>\n</>\n  })}\n</div>\n</>\n)\n}\n\nexport default Home;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,UAAU,CAAC,GAAGR,gBAAgB,CAAC,CAAC,CAAC,CAAE;;EAElD,MAAMS,cAAc,GAAGD,UAAU,GAC/BD,MAAM,CAACG,MAAM,CACVC,KAAK,IAAKA,KAAK,CAACC,KAAK,IAAID,KAAK,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,UAAU,CAACK,WAAW,CAAC,CAAC,CACvF,CAAC,GACDN,MAAM;EACR;;EAEAQ,OAAO,CAACC,GAAG,CAACP,cAAc,EAAC,iBAAiB,CAAC;EAC5C,oBACHP,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACCf,OAAA;MAAOgB,IAAI,EAAC,QAAQ;MAACC,SAAS,EAAC,sMAAsM;MAACC,WAAW,EAAC,wBAAwB;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvRvB,OAAA;MAAKiB,SAAS,EAAC,2BAA2B;MAAAF,QAAA,EACzCR,cAAc,CAACiB,GAAG,CAAEC,IAAI,IAAG;QACxB,oBAAQzB,OAAA,CAAAE,SAAA;UAAAa,QAAA,eACRf,OAAA;YAAmBiB,SAAS,EAAC,8CAA8C;YAAAF,QAAA,eAC7Ef,OAAA;cAAKiB,SAAS,EAAC,QAAQ;cAACS,GAAG,EAAE,kCAAkCD,IAAI,CAACE,WAAW,EAAG;cAACC,GAAG,EAAC;YAAyB;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC,GADtGE,IAAI,CAACI,EAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEhB;QAAC,gBACJ,CAAC;MACD,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACJ,CAAC;AAEH;AAACnB,EAAA,CAzBQD,IAAI;EAAA,QACkBL,gBAAgB;AAAA;AAAAgC,EAAA,GADtC3B,IAAI;AA2Bb,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}